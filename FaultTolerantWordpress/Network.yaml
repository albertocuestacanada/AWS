AWSTemplateFormatVersion: 2010-09-09
Outputs:
  WordpressSubnet1:
    Description: The subnet in the eu-west-1a region and zone for the Wordpress project.
    Value: !Ref Subnet1
    Export:
      Name: WordpressSubnet1
  WordpressSubnet2:
    Description: The subnet in the eu-west-1a region and zone for the Wordpress project.
    Value: !Ref Subnet2
    Export:
      Name: WordpressSubnet2
  WordpressRDSSG:
    Description: The Security Group to use with databases in the Wordpress project.
    Value: !Ref RDSSG
    Export:
      Name: WordpressRDSSG
  WordpressWebSG:
    Description: The Security Group to use with web servers in the Wordpress project.
    Value: !Ref WebSG
    Export:
      Name: WordpressWebSG
  # EC2 Instances require the Security Group Id instead of the Security Group Resource
  WordpressWebSGGroupId:
    Description: The Security Group Id to use with web servers in the Wordpress project.
    Value:
      Fn::GetAtt:
        - WebSG
        - GroupId
    Export:
      Name: WordpressWebSGGroupId
Resources:
  MyVPC:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 192.168.0.0/16
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 37895652-3013-4912-a62b-7397f57cc016
  Subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 192.168.0.0/24
      AvailabilityZone: "eu-west-1a"
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b1c5f67e-d30a-493a-8ea4-2a18b9fd2882
  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 192.168.1.0/24
      AvailabilityZone: "eu-west-1b"
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 01326c75-c2d3-4eea-9384-38308d2e60c0
  WebSG:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Web front ends are open to traffic on port 80 for HTTP from all IPs and from to SSH traffic on port 22 from all IPs. Harden for real life, please.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c70135ad-ad56-4037-9161-7885c1babb50
  RDSSG:
    # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref MyVPC
      GroupDescription: Back end databases
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !Ref WebSG
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 3eaf1acb-f3e4-43e9-985b-04ba7f3fea31
  MyALB:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref WebSG
  MyALBTargetGroup: 
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html   
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckPath: /healthy.html
      HealthCheckPort: 80
      HealthCheckProtocol: HTTP
      Name: MyALBTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref MyVPC
  MyInternetGateway:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
    Type: "AWS::EC2::InternetGateway"
    Properties: {}
  MyVPNGatewayAttachment:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      InternetGatewayId: !Ref MyInternetGateway
      VpcId: !Ref MyVPC
  WordpressCode:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: albertocuesta-wordpress-code
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b231a9ba-118e-4556-b2f7-ada6a768b920
  MediaAssets:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: albertocuesta-media-assets
      AccessControl: PublicRead
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4c36fbbd-21cc-4ef2-a3c6-8c8c9bda2859
  MyRecordSet:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-recordset.html
    Type: 'AWS::Route53::RecordSet'    
    Properties:
      Name: albertocuesta.click.
      HostedZoneName: albertocuesta.click.
      Type: A
      AliasTarget: 
        DNSName: !GetAtt MyALB.DNSName
        HostedZoneId: !GetAtt MyALB.CanonicalHostedZoneID
